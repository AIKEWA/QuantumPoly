# Example GitHub Actions Workflow for Vercel Health and QA
# Rename to .github/workflows/vercel-health-qa.yml to activate

name: Vercel Health & QA

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  vercel-health:
    name: Vercel Deployment Health
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.vercel-check.outputs.preview-url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Verify Vercel Deployment Health
        id: vercel-check
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
        run: |
          PREVIEW_URL=$(node scripts/verify-vercel.mjs)
          echo "preview-url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

  lighthouse-qa:
    name: QA - Lighthouse & A11y
    runs-on: ubuntu-latest
    needs: vercel-health
    if: needs.vercel-health.outputs.preview-url != ''
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to be fully ready..."
          sleep 30
      
      - name: Run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          PREVIEW_URL: ${{ needs.vercel-health.outputs.preview-url }}
        run: |
          npx @lhci/cli autorun --collect.url="$PREVIEW_URL"
      
      - name: Run Accessibility Tests
        env:
          PREVIEW_URL: ${{ needs.vercel-health.outputs.preview-url }}
        run: |
          # Install axe-crawler or alternative a11y testing tool
          npx axe-crawler "$PREVIEW_URL" --exit
      
      - name: Upload Lighthouse Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-reports
          path: lighthouse-reports/
          retention-days: 30

  quality-gate:
    name: Quality Gate Summary
    runs-on: ubuntu-latest
    needs: [vercel-health, lighthouse-qa]
    if: always()
    
    steps:
      - name: Quality Gate Results
        run: |
          echo "## Quality Gate Results" >> $GITHUB_STEP_SUMMARY
          echo "- Vercel Health: ${{ needs.vercel-health.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Lighthouse QA: ${{ needs.lighthouse-qa.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Preview URL: ${{ needs.vercel-health.outputs.preview-url }}" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.vercel-health.result }}" != "success" ]]; then
            echo "❌ Vercel deployment health check failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          if [[ "${{ needs.lighthouse-qa.result }}" != "success" ]]; then
            echo "❌ Lighthouse/A11y QA failed - check reports" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          echo "✅ All quality gates passed" >> $GITHUB_STEP_SUMMARY
