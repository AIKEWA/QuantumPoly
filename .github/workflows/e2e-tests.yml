name: E2E Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test-e2e:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run Playwright tests (shard ${{ matrix.shard }}/3)
        run: npx playwright test --shard=${{ matrix.shard }}/3
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.shard }}
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.shard }}
          path: playwright-report/
          retention-days: 7

  test-e2e-i18n:
    name: i18n E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run i18n E2E tests
        run: npm run test:e2e:i18n
        env:
          CI: true

      - name: Upload i18n test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: i18n-e2e-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  test-e2e-mobile:
    name: Mobile E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium webkit

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run mobile tests
        run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
        env:
          CI: true

      - name: Upload mobile test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-e2e-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  test-results:
    name: Publish Test Results
    if: always()
    needs: [test-e2e, test-e2e-i18n, test-e2e-mobile]
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate summary
        run: |
          echo "## E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Suites" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Desktop E2E Tests (3 shards)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ i18n E2E Tests" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Mobile E2E Tests" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "Test reports and results have been uploaded as artifacts." >> $GITHUB_STEP_SUMMARY

